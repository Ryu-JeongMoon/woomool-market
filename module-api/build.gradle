configurations {
    asciidoctorExtensions
}

ext {
    snippetsDir = file('build/generated-snippets')
}

dependencies {
    implementation project(':module-core')
    implementation project(':module-service')

    implementation "io.springfox:springfox-boot-starter:3.0.0"
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'

    implementation 'org.springframework.boot:spring-boot-devtools'
    implementation 'io.micrometer:micrometer-registry-prometheus:1.7.5'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'de.codecentric:spring-boot-admin-starter-client:2.5.2'

    testImplementation project(path: ":module-service", configuration: 'testArtifacts')
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    asciidoctorExtensions 'org.springframework.restdocs:spring-restdocs-asciidoctor'
}

test {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

asciidoctor {
    configurations 'asciidoctorExtensions'
    inputs.dir snippetsDir
    dependsOn test
}

task copyDocument(type: Copy) {
    dependsOn asciidoctor
    from "${asciidoctor.outputDir}"
    into 'src/main/resources/static/docs'
}

jar {
    enabled = false
}

bootJar {
    enabled = true
    dependsOn copyDocument

    dependsOn asciidoctor
    copy {
        from "${asciidoctor.outputDir}"
        into 'src/main/resources/static/docs'
    }
}