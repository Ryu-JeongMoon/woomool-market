buildscript {
    ext {
        springBootVersion = '2.5.3.RELEASE'
    }
    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}'
        classpath 'io.spring.gradle:dependency-management-plugin:1.0.11.RELEASE'
    }
}

plugins {
    id 'org.springframework.boot' version '2.5.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id "org.asciidoctor.jvm.convert" version "3.3.2"
    id "com.github.node-gradle.node" version "3.1.0"
    id 'jacoco'
    id 'java'
}

repositories {
    mavenCentral()
}

group = 'com.woomool-market'
version = '1.0'
sourceCompatibility = '11'
targetCompatibility = '11'

subprojects {
    apply plugin: 'java'
    apply plugin: 'jacoco'
    apply plugin: 'org.asciidoctor.jvm.convert'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    repositories {
        mavenCentral()
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
        all {
            exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
            exclude module: 'spring-boot-starter-tomcat'
            resolutionStrategy.eachDependency { DependencyResolveDetails details ->
                if (details.requested.group == 'org.apache.logging.log4j') {
                    details.useVersion '2.15.0'
                }
            }
        }
    }

    ext {
        set('springCloudVersion', "2020.0.3")
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-undertow'
        implementation('org.springframework.boot:spring-boot-starter-web') {
            exclude module: 'spring-boot-starter-tomcat'
        }

        implementation 'org.springframework.boot:spring-boot-starter-mail'
        implementation 'org.springframework.boot:spring-boot-starter-cache'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-data-redis'
        implementation 'org.springframework.boot:spring-boot-starter-log4j2:2.6.1'

        implementation 'org.springframework.boot:spring-boot-starter-security'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        implementation 'org.springframework.security.oauth:spring-security-oauth2'
        implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
        implementation 'org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure'
        implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

        implementation 'org.mapstruct:mapstruct:1.4.1.Final'
        implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.7.1'

        runtimeOnly 'com.h2database:h2'
        runtimeOnly 'mysql:mysql-connector-java'
        compileOnly 'org.projectlombok:lombok:1.18.20'
        annotationProcessor 'org.projectlombok:lombok'
        annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.1.Final'
        annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

        testCompileOnly 'org.projectlombok:lombok:1.18.20'
        testAnnotationProcessor 'org.projectlombok:lombok'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'org.springframework.security:spring-security-test'
        testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: '5.7.2'
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

    jacoco {
        toolVersion = "0.8.7"
        reportsDirectory = file("$buildDir/customJacocoReportDir")
    }

    jacocoTestReport {
        reports {
            xml.enabled false
            csv.enabled false
            html.destination file("${buildDir}/jacocoHtml")
        }
    }

    test {
        useJUnitPlatform()
    }
}

node {
    version = '16.6.1'
    yarnVersion = "1.22.17"
    download = true
    distBaseUrl = 'https://nodejs.org/dist'
    workDir = file("./module-vue-ts/nodejs")
    yarnWorkDir = file("./module-vue-ts/yarn")
    nodeModulesDir = file("./module-vue-ts")
}

task setUp(type: YarnTask) {
    description = "Install Node.js packages"
    args = ['install']
    inputs.files file('package.json')
    outputs.files file('node_modules')
}

task buildVue(type: YarnTask, dependsOn: setUp) {
    description = "Build vue.js"
    args = ['run', 'build']
}

processResources.dependsOn 'buildVue'

bootJar {
    mainClassName = 'com.woomoolmarket.ModuleApiApplication'
}